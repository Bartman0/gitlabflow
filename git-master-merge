#!/bin/sh
set -e
masterBranch="master"

if [[ "$1" = "--h" ]] ; then
   echo "Merge to master: ";
   echo "  - git master merge <branch>";
   echo ""
   echo "This command will merge features/defects/hotfixes to master branches."
   exit 1;
fi

if ! [ -d .git ] ; then
	if ! [ "$(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}")" == "0" ] ; then
		echo "Current directory is not a git folder."
		exit 1;
	fi
fi

branch=$(git rev-parse --abbrev-ref HEAD)
shortBranch=$(echo $branch | cut -d'/' -f 2)

if [[ "$masterBranch" != "$shortBranch" ]]
then
    echo "We are not on the master branch, currently, please checkout first to make sure of its status"
    exit 1
fi

if [[ "$1" == "" ]]
then
    echo "Please specify a branch to merge"
    exit 1
fi

if [[ ! "$1" =~ ^(feature|defect|hotfix)\/.*$ ]]
then
    echo "Only features, defects or hotfixes can be merged"
    exit 1
fi

function parse {
    version=$(git tag -l [0-9]*.[0-9]*.[0-9]* | sort --version-sort --field-separator=. | tail -n1)

    if [ -z "$version" ]
    then
        version="0.0.0"
    fi

    patchpart="${version##*.}"
    majorpart="${version%.*}"
    minorpart="${majorpart#*.}"
    majorpart="${majorpart%.*}"
}

# pull and checkout master
echo "Pull $masterBranch from origin"
git pull origin $masterBranch:$masterBranch
#git checkout $masterBranch

parse
echo "Current version: $majorpart.$minorpart.$patchpart"

git merge --no-ff "$1"

